main () : proc

    knapsack(n: int, w_max: int, w: reference int [], v: reference int []) : int
        max(a: int, b: int) : int
        {
            if (a > b) return a;
            return b;
        }
    {
        if ( (n == 0) | (w_max == 0) ) return 0;

        if (w[n - 1] > w_max)
            return knapsack(n - 1, w_max, w, v);
        else
            return max(
                v[n - 1] + knapsack(n - 1, w_max - w[n - 1], w, v), 
                knapsack(n - 1, w_max, w, v)
            );

    }

    w : int[10000];
    v : int[10000];
    n : int;
    w_max : int;
    res : int;
    i : int;

{ -- main
    n = readInteger();
    w_max = readInteger();

    if (n <= 0) return;

    i = 0;
    while (i < n) {
        w[i] = readInteger();
        i = i + 1;
    }

    i = 0;
    while (i < n) {
        v[i] = readInteger();
        i = i + 1;
    }

    res = knapsack(n, w_max, w, v);
    
    writeInteger(res);
    writeChar('\n');
} -- main
